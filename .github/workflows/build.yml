name: Build Antares Qt Project for Linux and Android

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive  # In case you have submodules
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          libgl1-mesa-dev \
          libxkbcommon-dev \
          libxcb-xkb-dev
          
    - name: Install Qt for Linux
      uses: jurplel/install-qt-action@v3
      with:
        version: 6.8.3
        host: linux
        target: desktop
        arch: linux_gcc_64
        modules: qtwebsockets qtquick3d qtshadertools qtquicktimeline qt5compat qtshadertools qtwebsockets qtmultimedia qtserialbus qtserialport
        cache: true
        
    - name: Build Qt Designer Components
      run: |
        # Clone and build Qt Designer Components as specified in README
        git clone https://code.qt.io/qt-labs/qtquickdesigner-components.git
        mkdir buildDScomponents
        cd buildDScomponents
        cmake -GNinja \
          -DCMAKE_INSTALL_PREFIX=$Qt6_DIR \
          -DCMAKE_BUILD_TYPE=Release \
          ../qtquickdesigner-components
        cmake --build .
        cmake --install .
        
    - name: Build Common Library
      run: |
        cd common
        mkdir build && cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DQt6_DIR=$Qt6_DIR
        cmake --build .
        
    - name: Build Cluster Application
      run: |
        cd Cluster
        mkdir build && cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DQt6_DIR=$Qt6_DIR
        cmake --build .
        
    # - name: Build IVI Application
    #   run: |
    #     cd IVI
    #     mkdir build && cd build
    #     cmake .. \
    #       -DCMAKE_BUILD_TYPE=Release \
    #       -DQt6_DIR=$Qt6_DIR
    #     cmake --build .
        
    - name: Package Linux binaries
      run: |
        # Create a directory for artifacts
        mkdir -p artifacts
        
        # Copy built applications
        if [ -f "Cluster/build/ClusterApp" ]; then
          cp Cluster/build/ClusterApp artifacts/
        fi
        
        if [ -f "IVI/build/ivi" ]; then
          cp IVI/build/ivi artifacts/
        fi
        
        # Create a simple info file
        echo "Linux build completed on $(date)" > artifacts/build_info.txt
        echo "Qt version: 6.8.3" >> artifacts/build_info.txt
        echo "Platform: Ubuntu Linux" >> artifacts/build_info.txt
        echo "Architecture: x86_64" >> artifacts/build_info.txt
        
    - name: Upload Linux binaries
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: antares-linux-binaries-${{ github.sha }}
        path: artifacts/
        retention-days: 30
        
    - name: Upload logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: linux-build-logs-${{ github.sha }}
        path: |
          */build/CMakeFiles/CMakeOutput.log
          */build/CMakeFiles/CMakeError.log
        retention-days: 7

  build-android:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Install system dependencies
      run: |
        brew install ninja cmake
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install Android NDK
      run: |
        sdkmanager --install "ndk;26.3.11579264"
        sdkmanager --install "platforms;android-33"
        sdkmanager --install "build-tools;33.0.0"
        echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/26.3.11579264" >> $GITHUB_ENV
        
    - name: Install Qt for macOS (host for Android cross-compilation)
      uses: jurplel/install-qt-action@v3
      with:
        version: 6.8.3
        host: mac
        target: desktop
        arch: clang_64
        modules: qtwebsockets qtquick3d qtshadertools qtquicktimeline qt5compat qtshadertools qtwebsockets qtmultimedia qtserialbus qtserialport
        cache: true
        
    - name: Store Qt host path
      run: echo "QT_HOST_PATH=$Qt6_DIR" >> $GITHUB_ENV
        
    - name: Install Qt for Android
      uses: jurplel/install-qt-action@v3
      with:
        version: 6.8.3
        host: mac
        target: android
        arch: android_arm64_v8a
        modules: qtwebsockets qtquick3d qtshadertools qtquicktimeline qt5compat qtshadertools qtwebsockets qtmultimedia qtserialbus qtserialport
        cache: true
        
    - name: Build Qt Designer Components for Android
      run: |
        # Clone and build Qt Designer Components for Android
        git clone https://code.qt.io/qt-labs/qtquickdesigner-components.git
        mkdir buildDScomponents-android
        cd buildDScomponents-android
        cmake -GNinja \
          -DCMAKE_INSTALL_PREFIX=$Qt6_DIR \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-33 \
          -DQT_HOST_PATH=$QT_HOST_PATH \
          -DQt6_DIR=$Qt6_DIR \
          -DCMAKE_PREFIX_PATH=$Qt6_DIR \
          ../qtquickdesigner-components
        cmake --build .
        cmake --install .
        
    - name: Build Common Library for Android
      run: |
        cd common
        mkdir build-android && cd build-android
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-33 \
          -DQt6_DIR=$Qt6_DIR \
          -DQT_HOST_PATH=$QT_HOST_PATH \
          -DCMAKE_PREFIX_PATH=$Qt6_DIR
        cmake --build .
        
    - name: Build Cluster Android APK
      run: |
        cd Cluster
        mkdir build-android && cd build-android
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-33 \
          -DQt6_DIR=$Qt6_DIR \
          -DQT_HOST_PATH=$QT_HOST_PATH \
          -DCMAKE_PREFIX_PATH=$Qt6_DIR
        cmake --build .
        
    - name: Package Android APK
      run: |
        # Create a directory for Android artifacts
        mkdir -p artifacts-android
        
        # Copy built APK
        if [ -f "Cluster/build-android/android-build/build/outputs/apk/debug/android-build-debug.apk" ]; then
          cp Cluster/build-android/android-build/build/outputs/apk/debug/android-build-debug.apk artifacts-android/ClusterApp-debug.apk
        fi
        
        if [ -f "Cluster/build-android/android-build/build/outputs/apk/release/android-build-release.apk" ]; then
          cp Cluster/build-android/android-build/build/outputs/apk/release/android-build-release.apk artifacts-android/ClusterApp-release.apk
        fi
        
        # Create a simple info file
        echo "Android build completed on $(date)" > artifacts-android/build_info.txt
        echo "Qt version: 6.8.3" >> artifacts-android/build_info.txt
        echo "Platform: Android" >> artifacts-android/build_info.txt
        echo "Architecture: arm64-v8a" >> artifacts-android/build_info.txt
        echo "API Level: 33" >> artifacts-android/build_info.txt
        
    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: antares-cluster-android-apk-${{ github.sha }}
        path: artifacts-android/
        retention-days: 30
        
    - name: Upload Android logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: android-build-logs-${{ github.sha }}
        path: |
          */build-android/CMakeFiles/CMakeOutput.log
          */build-android/CMakeFiles/CMakeError.log
        retention-days: 7
